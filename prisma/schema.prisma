// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum CODE_TYPE {
  ADMIN
  DIRECTOR
  SINGER
  TEMP
}

enum CODE_ROL {
  SOPRANO
  ALTO
  TENOR
  BAJO
}

//CODIGO ACTIVACIÃ“N
model codigoActivacion {
  id             Int       @id @default(autoincrement())
  activationCode String    @unique
  type           CODE_TYPE
  usesLeft       Int
  rope          CODE_ROL
}

//USUARIOS
model User {
  id          Int           @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String        @unique
  password    String
  type        CODE_TYPE
  rope        CODE_ROL?
  color       String
  gender      String
  height      Float
  birthDate   DateTime
  photo       String?
  LineupUsers LineupUsers[]
  Assists     Assists[]
}

//EVENTOS
model events {
  event_id          Int           @id @default(autoincrement())
  event_title       String
  event_description String?
  date              DateTime
  eventTime         String
  streetAddres      String
  LineupUsers       LineupUsers[]
  Assists           Assists[]
}

//CONTACT FORM
model contactForm {
  id          Int           @id @default(autoincrement())
  proposal    String
  title       String
  description String
  email       String
  phone       Int
  LineupUsers LineupUsers[]
}

//FORMACIONES
model lineup {
  id          Int           @id @default(autoincrement())
  description String
  LineupUsers LineupUsers[]
}

//FORMACION USERS
model LineupUsers {
  event         events       @relation(fields: [eventId], references: [event_id])
  eventId       Int
  user          User         @relation(fields: [userId], references: [id])
  userId        Int
  lineup        lineup       @relation(fields: [lineupId], references: [id])
  lineupId      Int
  contactForm   contactForm? @relation(fields: [contactFormId], references: [id])
  contactFormId Int?

  @@id([eventId, userId, lineupId])
}

//ASISTENCIAS
model Assists {
  event   events @relation(fields: [eventId], references: [event_id])
  eventId Int
  user    User   @relation(fields: [userId], references: [id])
  userId  Int

  @@id([eventId, userId])
}
